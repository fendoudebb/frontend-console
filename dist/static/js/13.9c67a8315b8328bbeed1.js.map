{"version":3,"sources":["webpack:///src/components/rank/PostCommentsList.vue","webpack:///./src/components/rank/PostCommentsList.vue?aa82","webpack:///./src/components/rank/PostCommentsList.vue"],"names":["PostCommentsList","name","data","_this","this","roles","localStorage","getItem","watchCommentPostId","commentPageSize","getPostCommentListSize","commentTotalCount","commentCurrentPage","commentListTableLoading","commentModal","commentReplyModal","postCommentsListTableLoading","pageSize","getCommentsListSize","totalCount","currentPage","postCommentsList","postCommentsListColumns","type","width","align","title","key","ellipsis","minWidth","render","h","params","style","display","overflow","textOverflow","whiteSpace","domProps","row","postStatus","text","color","props","action","watchComment","size","marginRight","on","click","watchPost","watchPostById","postId","push","commentList","commentColumns","content","commentStatus","status","indexOf","watchCommentReply","replyComment","deleteComment","replies","commentReplyList","commentReplyColumns","replyContent","methods","extends_default","replyPostComment","rank_post","Object","external__Vuex_","window","open","_this2","$Modal","confirm","value","autofocus","placeholder","input","val","onOk","commentId","then","res","$Message","success","getCommentList","catch","err","error","_this3","setCommentId","handleDeletePostComment","onVisibleChange","isShow","id","_this4","setCommentPostId","handlePostCommentList","commentCount","postComment","reason","commentChangePage","index","setPostCommentListPage","changePage","setCommentsListPage","getPostCommentsList","_this5","handlePostCommentsList","post","created","mounted","rank_PostCommentsList","_vm","_h","$createElement","_c","_self","staticStyle","margin","padding","background-color","attrs","border","stripe","highlight-row","columns","loading","_v","page-size","total","current","show-elevator","show-total","on-change","on-visible-change","model","callback","$$v","expression","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/13.9c67a8315b8328bbeed1.js","sourcesContent":["<template>\r\n  <div style=\"margin: 20px;padding:20px;background-color: white;\">\r\n    <Table border stripe :highlight-row=\"true\" :data=\"postCommentsList\" :columns=\"postCommentsListColumns\" :loading=\"postCommentsListTableLoading\"></Table>\r\n    <div style=\"margin: 20px;overflow: hidden\">\r\n      <Page :page-size=\"pageSize\" :total=\"totalCount\" :current=\"currentPage\" @on-change=\"changePage\" show-elevator\r\n            show-total></Page>\r\n    </div>\r\n\r\n    <Modal\r\n      @on-visible-change=\"onVisibleChange\"\r\n      :width=\"1000\"\r\n      v-model=\"commentModal\"\r\n      title=\"文章评论\">\r\n      <Table stripe border :columns=\"commentColumns\" :data=\"commentList\" :loading=\"commentListTableLoading\"></Table>\r\n\r\n      <div style=\"margin: 20px;overflow: hidden\">\r\n        <Page :page-size=\"commentPageSize\" :total=\"commentTotalCount\" :current=\"commentCurrentPage\"\r\n              @on-change=\"commentChangePage\" show-elevator\r\n              show-total></Page>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal\r\n      :width=\"1000\"\r\n      v-model=\"commentReplyModal\"\r\n      title=\"评论回复\">\r\n      <Table stripe border :columns=\"commentReplyColumns\" :data=\"commentReplyList\"></Table>\r\n\r\n\r\n    </Modal>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {mapMutations, mapGetters, mapActions} from 'vuex';\r\n  import {replyPostComment} from '@/api/rank_post';\r\n\r\n  export default {\r\n    name: \"post-comments-list\",\r\n    data() {\r\n      return {\r\n        roles: localStorage.getItem('roles'),\r\n        watchCommentPostId: '',\r\n        commentPageSize: this.getPostCommentListSize(),\r\n        commentTotalCount: 1,\r\n        commentCurrentPage: 1,\r\n        commentListTableLoading: false,\r\n        commentModal: false,\r\n        commentReplyModal: false,\r\n        //  h('Tag', {props: {color: params.row.original ? 'green' : 'blue'}}, params.row.original ? '原创' : '转载')\r\n        postCommentsListTableLoading: false,\r\n        pageSize: this.getCommentsListSize(),\r\n        totalCount: 1,\r\n        currentPage: 1,\r\n        postCommentsList: [],\r\n        postCommentsListColumns: [\r\n          {\r\n            type: 'index',\r\n            width: 60,\r\n            align: 'center',\r\n          },\r\n          {title: 'ID', key: 'postId', align: 'center', ellipsis:true, minWidth: 60,},\r\n          {title: '标题', key: 'title', align: 'center', ellipsis:true, minWidth: 300,\r\n            render: (h, params) => {\r\n              return h('div', [\r\n                h('span', {\r\n                  style: {\r\n                    display: 'inline-block',\r\n                    width: '100%',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap'\r\n                  },\r\n                  domProps: {\r\n                    title: params.row.title\r\n                  }\r\n                }, params.row.title)\r\n              ])\r\n            }\r\n          },\r\n          {title: '评论数', key: 'commentCount', align: 'center', ellipsis:true, minWidth: 100,},\r\n          // {title: '评论数', key: 'commentCount', align: 'center'},\r\n          // {title: '点赞数', key: 'likeCount', align: 'center'},\r\n          {\r\n            title: '状态', key: 'postStatus', align: 'center', ellipsis:true, minWidth: 90,\r\n            render: (h, params) => {\r\n              let postStatus = params.row.postStatus;\r\n              let text = '';\r\n              let color = '';\r\n              if (postStatus === 'AUDIT') {\r\n                text = '待审核';\r\n                color = 'orange';\r\n              } else if (postStatus === 'ONLINE') {\r\n                text = '上线';\r\n                color = 'green';\r\n              } else if (postStatus === 'OFFLINE') {\r\n                text = '下线';\r\n                color = 'red';\r\n              } else if (postStatus === 'PRIVATE') {\r\n                text = '私人';\r\n                color = 'lightskyblue';\r\n              } else if (postStatus === 'DRAFT') {\r\n                text = '草稿';\r\n                color = 'lightskyblue';\r\n              }\r\n              return h('Tag', {props: {color: color}}, text);\r\n            }\r\n          },\r\n          {\r\n            title: '操作', key: 'action', align: 'center', ellipsis:true, minWidth: 200,\r\n            render: (h, params) => {\r\n              let postStatus = params.row.postStatus;\r\n              let action = [];\r\n              if (postStatus === 'ONLINE') {\r\n                let watchComment = h('Button', {props: {type: 'info', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.watchComment(params)}}}, '查看评论');\r\n                let watchPost = h('Button', {props: {type: 'success', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.watchPostById(params.row.postId)}}}, '查看文章');\r\n                action.push(watchComment);\r\n                action.push(watchPost);\r\n              }\r\n              return h('div', [action]);\r\n            }\r\n          }\r\n        ],\r\n        commentList: [],\r\n        commentColumns: [\r\n          {title: '楼层', key: 'floor', align: 'center',minWidth: 80,},\r\n          {title: '昵称', key: 'nickname', align: 'center', minWidth: 100},\r\n          {title: '内容', key: 'content', align: 'center', ellipsis:true, minWidth: 300,\r\n            render: (h, params) => {\r\n              return h('div', [\r\n                h('span', {\r\n                  style: {\r\n                    display: 'inline-block',\r\n                    width: '100%',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap'\r\n                  },\r\n                  domProps: {\r\n                    title: params.row.content\r\n                  }\r\n                }, params.row.content)\r\n              ])\r\n            }\r\n          },\r\n          {title: '留言时间', key: 'commentTime', align: 'center', minWidth: 150},\r\n          {title: '浏览器', key: 'browser', align: 'center', minWidth: 150},\r\n          {title: '操作系统', key: 'os', align: 'center', minWidth: 100},\r\n          {\r\n            title: '状态', key: 'status', align: 'center', minWidth: 100,\r\n            render: (h, params) => {\r\n              let commentStatus = params.row.status;\r\n              let text = '';\r\n              let color = '';\r\n              if (commentStatus === 'ONLINE') {\r\n                text = '上线';\r\n                color = 'green';\r\n              } else if (commentStatus === 'OFFLINE') {\r\n                text = '下线';\r\n                color = 'red';\r\n              }\r\n              return h('Tag', {props: {color: color}}, text);\r\n            }\r\n          },\r\n          {\r\n            title: '操作', key: 'action', align: 'center', minWidth: 200,\r\n            render: (h, params) => {\r\n              let action = [];\r\n              if (this.roles.indexOf(\"ROLE_ADMIN\") > -1) {\r\n                //@formatter:off\r\n                let watchCommentReply = h('Button', {props: {type: 'info', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.watchCommentReply(params)}}}, '查看回复');\r\n                let replyComment = h('Button', {props: {type: 'primary', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.replyComment(params)}}}, '回复');\r\n                let deleteComment = h('Button', {props: {type: 'error', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.deleteComment(params)}}}, '删除');\r\n                //@formatter:on\r\n                if (params.row.replies != null) {\r\n                  action.push(watchCommentReply);\r\n                }\r\n                let commentStatus = params.row.status;\r\n                if (commentStatus === 'OFFLINE') {\r\n\r\n                } else {\r\n                  action.push(replyComment);\r\n                  action.push(deleteComment);\r\n                }\r\n              }\r\n              return h('div', [action]);\r\n            }\r\n          }\r\n        ],\r\n        commentReplyList:[],\r\n        commentReplyColumns:[\r\n          {title: '内容', key: 'replyContent', align: 'center', ellipsis:true, minWidth: 300,\r\n            render: (h, params) => {\r\n              return h('div', [\r\n                h('span', {\r\n                  style: {\r\n                    display: 'inline-block',\r\n                    width: '100%',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap'\r\n                  },\r\n                  domProps: {\r\n                    title: params.row.replyContent\r\n                  }\r\n                }, params.row.replyContent)\r\n              ])\r\n            }\r\n          },\r\n          {title: '留言时间', key: 'replyTime', align: 'center', minWidth: 150},\r\n          {title: '浏览器', key: 'browser', align: 'center', minWidth: 150},\r\n          {title: '操作系统', key: 'os', align: 'center', minWidth: 100},\r\n        ]\r\n      };\r\n    },\r\n    methods: {\r\n      replyPostComment,\r\n      ...mapMutations([\r\n        'setCommentsListPage',\r\n        'setCommentPostId',\r\n        'setCommentId',\r\n        'setPostCommentListPage'\r\n      ]),\r\n      ...mapGetters([\r\n        'getCommentsListSize',\r\n        'getPostCommentListSize',\r\n      ]),\r\n      ...mapActions([\r\n        'handlePostCommentsList',\r\n        'handlePostCommentList',\r\n        'handleDeletePostComment',\r\n        'handleReplyComment',\r\n      ]),\r\n      watchPostById(postId) {\r\n        window.open('https://www.zhangbj.com/p/' + postId + \".html\");\r\n      },\r\n\r\n      watchCommentReply(params) {\r\n        this.commentReplyModal = true;\r\n        this.commentReplyList = params.row.replies\r\n      },\r\n\r\n      replyComment(params) {\r\n        this.$Modal.confirm({\r\n          render: (h) => {\r\n            return h('Input', {\r\n              props: {\r\n                value: this.replyContent,\r\n                autofocus: true,\r\n                placeholder: '请输入回复...'\r\n              },\r\n              on: {\r\n                input: (val) => {\r\n                  this.replyContent = val;\r\n                }\r\n              }\r\n            })\r\n          },\r\n          onOk: () => {\r\n            this.replyPostComment(this.watchCommentPostId, params.row.commentId, this.replyContent).then(res => {\r\n              this.replyContent = '';\r\n              this.$Message.success(\"回复成功！\");\r\n              this.getCommentList();\r\n            }).catch(err => {\r\n              this.$Message.error(err);\r\n            });\r\n          }\r\n        })\r\n      },\r\n\r\n      deleteComment(params) {\r\n        this.setCommentId(params.row.commentId);\r\n        this.handleDeletePostComment().then(value => {\r\n          this.$Message.success(\"删除成功!\");\r\n          this.getCommentList()\r\n        });\r\n      },\r\n\r\n      onVisibleChange(isShow) {\r\n        if (!isShow) {\r\n          this.watchCommentPostId = '';\r\n          this.commentList = [];\r\n          this.commentCurrentPage = 1;\r\n          this.commentTotalCount = 1;\r\n        }\r\n      },\r\n\r\n      watchComment(params) {\r\n        this.watchCommentPostId = params.row.id;\r\n        this.commentModal = true;\r\n        this.getCommentList();\r\n      },\r\n\r\n      getCommentList() {\r\n        this.commentListTableLoading = true;\r\n        this.setCommentPostId(this.watchCommentPostId);\r\n        this.handlePostCommentList().then(value => {\r\n          this.commentTotalCount = value.data.commentCount;\r\n          this.commentList = value.data.postComment;\r\n          this.commentListTableLoading = false;\r\n        }).catch(reason => {\r\n          this.commentListTableLoading = false;\r\n        })\r\n      },\r\n\r\n      commentChangePage(index) {\r\n        this.commentCurrentPage = index;\r\n        this.setPostCommentListPage(index);\r\n        this.getCommentList();\r\n      },\r\n\r\n      changePage(index) {\r\n        this.setCommentsListPage(index);\r\n        this.getPostCommentsList();\r\n      },\r\n\r\n      getPostCommentsList() {\r\n        this.postCommentsListTableLoading = true;\r\n        this.handlePostCommentsList().then(value => {\r\n          this.totalCount = value.data.totalCount;\r\n          this.postCommentsList = value.data.post;\r\n          this.postCommentsListTableLoading = false;\r\n        }).catch(reason => {\r\n          this.postCommentsListTableLoading = false;\r\n        })\r\n      }\r\n    },\r\n    created() {\r\n      this.getPostCommentsList();\r\n    },\r\n    mounted() {\r\n\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .ivu-table-column-center {\r\n    white-space: nowrap !important;\r\n  }\r\n  .ivu-table-cell {\r\n    white-space: nowrap !important;\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/rank/PostCommentsList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin\":\"20px\",\"padding\":\"20px\",\"background-color\":\"white\"}},[_c('Table',{attrs:{\"border\":\"\",\"stripe\":\"\",\"highlight-row\":true,\"data\":_vm.postCommentsList,\"columns\":_vm.postCommentsListColumns,\"loading\":_vm.postCommentsListTableLoading}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"20px\",\"overflow\":\"hidden\"}},[_c('Page',{attrs:{\"page-size\":_vm.pageSize,\"total\":_vm.totalCount,\"current\":_vm.currentPage,\"show-elevator\":\"\",\"show-total\":\"\"},on:{\"on-change\":_vm.changePage}})],1),_vm._v(\" \"),_c('Modal',{attrs:{\"width\":1000,\"title\":\"文章评论\"},on:{\"on-visible-change\":_vm.onVisibleChange},model:{value:(_vm.commentModal),callback:function ($$v) {_vm.commentModal=$$v},expression:\"commentModal\"}},[_c('Table',{attrs:{\"stripe\":\"\",\"border\":\"\",\"columns\":_vm.commentColumns,\"data\":_vm.commentList,\"loading\":_vm.commentListTableLoading}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"20px\",\"overflow\":\"hidden\"}},[_c('Page',{attrs:{\"page-size\":_vm.commentPageSize,\"total\":_vm.commentTotalCount,\"current\":_vm.commentCurrentPage,\"show-elevator\":\"\",\"show-total\":\"\"},on:{\"on-change\":_vm.commentChangePage}})],1)],1),_vm._v(\" \"),_c('Modal',{attrs:{\"width\":1000,\"title\":\"评论回复\"},model:{value:(_vm.commentReplyModal),callback:function ($$v) {_vm.commentReplyModal=$$v},expression:\"commentReplyModal\"}},[_c('Table',{attrs:{\"stripe\":\"\",\"border\":\"\",\"columns\":_vm.commentReplyColumns,\"data\":_vm.commentReplyList}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-0e6e2820\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/rank/PostCommentsList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0e6e2820\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./PostCommentsList.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./PostCommentsList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./PostCommentsList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0e6e2820\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./PostCommentsList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0e6e2820\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/rank/PostCommentsList.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}
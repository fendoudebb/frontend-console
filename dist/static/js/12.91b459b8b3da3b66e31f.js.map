{"version":3,"sources":["webpack:///src/components/rank/PostCommentsList.vue","webpack:///./src/components/rank/PostCommentsList.vue?0adb","webpack:///./src/components/rank/PostCommentsList.vue"],"names":["PostCommentsList","name","data","_this","this","roles","localStorage","getItem","watchCommentPostId","commentPageSize","getPostCommentListSize","commentTotalCount","commentCurrentPage","commentListTableLoading","commentModal","commentReplyModal","postCommentsListTableLoading","pageSize","getCommentsListSize","totalCount","currentPage","postCommentsList","postCommentsListColumns","type","width","align","title","key","ellipsis","minWidth","render","h","params","style","display","overflow","textOverflow","whiteSpace","domProps","row","postStatus","text","color","props","action","watchComment","size","marginRight","on","click","watchPost","watchPostById","postId","push","commentList","commentColumns","content","commentStatus","status","indexOf","watchCommentReply","replyComment","deleteComment","replies","commentReplyList","commentReplyColumns","replyContent","methods","extends_default","replyPostComment","rank_post","Object","external__Vuex_","window","open","_this2","$Modal","confirm","value","autofocus","placeholder","input","val","onOk","commentId","then","res","$Message","success","getCommentList","catch","err","error","_this3","setCommentId","handleDeletePostComment","onVisibleChange","isShow","id","_this4","setCommentPostId","handlePostCommentList","commentCount","postComment","reason","commentChangePage","index","setPostCommentListPage","changePage","setCommentsListPage","getPostCommentsList","_this5","handlePostCommentsList","post","created","mounted","rank_PostCommentsList","_vm","_h","$createElement","_c","_self","staticStyle","margin","padding","background-color","attrs","border","stripe","highlight-row","columns","loading","_v","page-size","total","current","show-elevator","show-total","on-change","on-visible-change","model","callback","$$v","expression","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/12.91b459b8b3da3b66e31f.js","sourcesContent":["<template>\n  <div style=\"margin: 20px;padding:20px;background-color: white;\">\n    <Table border stripe :highlight-row=\"true\" :data=\"postCommentsList\" :columns=\"postCommentsListColumns\" :loading=\"postCommentsListTableLoading\"></Table>\n    <div style=\"margin: 20px;overflow: hidden\">\n      <Page :page-size=\"pageSize\" :total=\"totalCount\" :current=\"currentPage\" @on-change=\"changePage\" show-elevator\n            show-total></Page>\n    </div>\n\n    <Modal\n      @on-visible-change=\"onVisibleChange\"\n      :width=\"1000\"\n      v-model=\"commentModal\"\n      title=\"文章评论\">\n      <Table stripe border :columns=\"commentColumns\" :data=\"commentList\" :loading=\"commentListTableLoading\"></Table>\n\n      <div style=\"margin: 20px;overflow: hidden\">\n        <Page :page-size=\"commentPageSize\" :total=\"commentTotalCount\" :current=\"commentCurrentPage\"\n              @on-change=\"commentChangePage\" show-elevator\n              show-total></Page>\n      </div>\n    </Modal>\n\n    <Modal\n      :width=\"1000\"\n      v-model=\"commentReplyModal\"\n      title=\"评论回复\">\n      <Table stripe border :columns=\"commentReplyColumns\" :data=\"commentReplyList\"></Table>\n\n\n    </Modal>\n\n  </div>\n</template>\n\n<script>\n  import {mapMutations, mapGetters, mapActions} from 'vuex';\n  import {replyPostComment} from '@/api/rank_post';\n\n  export default {\n    name: \"post-comments-list\",\n    data() {\n      return {\n        roles: localStorage.getItem('roles'),\n        watchCommentPostId: '',\n        commentPageSize: this.getPostCommentListSize(),\n        commentTotalCount: 1,\n        commentCurrentPage: 1,\n        commentListTableLoading: false,\n        commentModal: false,\n        commentReplyModal: false,\n        //  h('Tag', {props: {color: params.row.original ? 'green' : 'blue'}}, params.row.original ? '原创' : '转载')\n        postCommentsListTableLoading: false,\n        pageSize: this.getCommentsListSize(),\n        totalCount: 1,\n        currentPage: 1,\n        postCommentsList: [],\n        postCommentsListColumns: [\n          {\n            type: 'index',\n            width: 60,\n            align: 'center',\n          },\n          {title: 'ID', key: 'postId', align: 'center', ellipsis:true, minWidth: 60,},\n          {title: '标题', key: 'title', align: 'center', ellipsis:true, minWidth: 300,\n            render: (h, params) => {\n              return h('div', [\n                h('span', {\n                  style: {\n                    display: 'inline-block',\n                    width: '100%',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  },\n                  domProps: {\n                    title: params.row.title\n                  }\n                }, params.row.title)\n              ])\n            }\n          },\n          {title: '评论数', key: 'commentCount', align: 'center', ellipsis:true, minWidth: 100,},\n          // {title: '评论数', key: 'commentCount', align: 'center'},\n          // {title: '点赞数', key: 'likeCount', align: 'center'},\n          {\n            title: '状态', key: 'postStatus', align: 'center', ellipsis:true, minWidth: 90,\n            render: (h, params) => {\n              let postStatus = params.row.postStatus;\n              let text = '';\n              let color = '';\n              if (postStatus === 'AUDIT') {\n                text = '待审核';\n                color = 'orange';\n              } else if (postStatus === 'ONLINE') {\n                text = '上线';\n                color = 'green';\n              } else if (postStatus === 'OFFLINE') {\n                text = '下线';\n                color = 'red';\n              } else if (postStatus === 'PRIVATE') {\n                text = '私人';\n                color = 'lightskyblue';\n              } else if (postStatus === 'DRAFT') {\n                text = '草稿';\n                color = 'lightskyblue';\n              }\n              return h('Tag', {props: {color: color}}, text);\n            }\n          },\n          {\n            title: '操作', key: 'action', align: 'center', ellipsis:true, minWidth: 200,\n            render: (h, params) => {\n              let postStatus = params.row.postStatus;\n              let action = [];\n              if (postStatus === 'ONLINE') {\n                let watchComment = h('Button', {props: {type: 'info', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.watchComment(params)}}}, '查看评论');\n                let watchPost = h('Button', {props: {type: 'success', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.watchPostById(params.row.postId)}}}, '查看文章');\n                action.push(watchComment);\n                action.push(watchPost);\n              }\n              return h('div', [action]);\n            }\n          }\n        ],\n        commentList: [],\n        commentColumns: [\n          {title: '楼层', key: 'floor', align: 'center',minWidth: 80,},\n          {title: '昵称', key: 'nickname', align: 'center', minWidth: 100},\n          {title: '内容', key: 'content', align: 'center', ellipsis:true, minWidth: 300,\n            render: (h, params) => {\n              return h('div', [\n                h('span', {\n                  style: {\n                    display: 'inline-block',\n                    width: '100%',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  },\n                  domProps: {\n                    title: params.row.content\n                  }\n                }, params.row.content)\n              ])\n            }\n          },\n          {title: '留言时间', key: 'commentTime', align: 'center', minWidth: 150},\n          {title: '浏览器', key: 'browser', align: 'center', minWidth: 150},\n          {title: '操作系统', key: 'os', align: 'center', minWidth: 100},\n          {\n            title: '状态', key: 'status', align: 'center', minWidth: 100,\n            render: (h, params) => {\n              let commentStatus = params.row.status;\n              let text = '';\n              let color = '';\n              if (commentStatus === 'ONLINE') {\n                text = '上线';\n                color = 'green';\n              } else if (commentStatus === 'OFFLINE') {\n                text = '下线';\n                color = 'red';\n              }\n              return h('Tag', {props: {color: color}}, text);\n            }\n          },\n          {\n            title: '操作', key: 'action', align: 'center', minWidth: 200,\n            render: (h, params) => {\n              let action = [];\n              if (this.roles.indexOf(\"ROLE_ADMIN\") > -1) {\n                //@formatter:off\n                let watchCommentReply = h('Button', {props: {type: 'info', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.watchCommentReply(params)}}}, '查看回复');\n                let replyComment = h('Button', {props: {type: 'primary', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.replyComment(params)}}}, '回复');\n                let deleteComment = h('Button', {props: {type: 'error', size: 'small'}, style: {marginRight: '5px'}, on: {click: () => {this.deleteComment(params)}}}, '删除');\n                //@formatter:on\n                if (params.row.replies != null) {\n                  action.push(watchCommentReply);\n                }\n                let commentStatus = params.row.status;\n                if (commentStatus === 'OFFLINE') {\n\n                } else {\n                  action.push(replyComment);\n                  action.push(deleteComment);\n                }\n              }\n              return h('div', [action]);\n            }\n          }\n        ],\n        commentReplyList:[],\n        commentReplyColumns:[\n          {title: '内容', key: 'replyContent', align: 'center', ellipsis:true, minWidth: 300,\n            render: (h, params) => {\n              return h('div', [\n                h('span', {\n                  style: {\n                    display: 'inline-block',\n                    width: '100%',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  },\n                  domProps: {\n                    title: params.row.replyContent\n                  }\n                }, params.row.replyContent)\n              ])\n            }\n          },\n          {title: '留言时间', key: 'replyTime', align: 'center', minWidth: 150},\n          {title: '浏览器', key: 'browser', align: 'center', minWidth: 150},\n          {title: '操作系统', key: 'os', align: 'center', minWidth: 100},\n        ]\n      };\n    },\n    methods: {\n      replyPostComment,\n      ...mapMutations([\n        'setCommentsListPage',\n        'setCommentPostId',\n        'setCommentId',\n      ]),\n      ...mapGetters([\n        'getCommentsListSize',\n        'getPostCommentListSize',\n      ]),\n      ...mapActions([\n        'handlePostCommentsList',\n        'handlePostCommentList',\n        'handleDeletePostComment',\n        'handleReplyComment',\n      ]),\n      watchPostById(postId) {\n        window.open('https://www.zhangbj.com/p/' + postId + \".html\");\n      },\n\n      watchCommentReply(params) {\n        this.commentReplyModal = true;\n        this.commentReplyList = params.row.replies\n      },\n\n      replyComment(params) {\n        this.$Modal.confirm({\n          render: (h) => {\n            return h('Input', {\n              props: {\n                value: this.replyContent,\n                autofocus: true,\n                placeholder: '请输入回复...'\n              },\n              on: {\n                input: (val) => {\n                  this.replyContent = val;\n                }\n              }\n            })\n          },\n          onOk: () => {\n            this.replyPostComment(this.watchCommentPostId, params.row.commentId, this.replyContent).then(res => {\n              this.replyContent = '';\n              this.$Message.success(\"回复成功！\");\n              this.getCommentList();\n            }).catch(err => {\n              this.$Message.error(err);\n            });\n          }\n        })\n      },\n\n      deleteComment(params) {\n        this.setCommentId(params.row.commentId);\n        this.handleDeletePostComment().then(value => {\n          this.$Message.success(\"删除成功!\");\n          this.getCommentList()\n        });\n      },\n\n      onVisibleChange(isShow) {\n        if (!isShow) {\n          this.watchCommentPostId = '';\n          this.commentList = [];\n          this.commentCurrentPage = 1;\n          this.commentTotalCount = 1;\n        }\n      },\n\n      watchComment(params) {\n        this.watchCommentPostId = params.row.id;\n        this.commentModal = true;\n        this.getCommentList();\n      },\n\n      getCommentList() {\n        this.commentListTableLoading = true;\n        this.setCommentPostId(this.watchCommentPostId);\n        this.handlePostCommentList().then(value => {\n          this.commentTotalCount = value.data.commentCount;\n          this.commentList = value.data.postComment;\n          this.commentListTableLoading = false;\n        }).catch(reason => {\n          this.commentListTableLoading = false;\n        })\n      },\n\n      commentChangePage(index) {\n        this.commentCurrentPage = index;\n        this.setPostCommentListPage(index);\n        this.getCommentList();\n      },\n\n      changePage(index) {\n        this.setCommentsListPage(index);\n        this.getPostCommentsList();\n      },\n\n      getPostCommentsList() {\n        this.postCommentsListTableLoading = true;\n        this.handlePostCommentsList().then(value => {\n          this.totalCount = value.data.totalCount;\n          this.postCommentsList = value.data.post;\n          this.postCommentsListTableLoading = false;\n        }).catch(reason => {\n          this.postCommentsListTableLoading = false;\n        })\n      }\n    },\n    created() {\n      this.getPostCommentsList();\n    },\n    mounted() {\n\n    }\n  };\n</script>\n\n<style scoped>\n\n  .ivu-table-column-center {\n    white-space: nowrap !important;\n  }\n  .ivu-table-cell {\n    white-space: nowrap !important;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/rank/PostCommentsList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin\":\"20px\",\"padding\":\"20px\",\"background-color\":\"white\"}},[_c('Table',{attrs:{\"border\":\"\",\"stripe\":\"\",\"highlight-row\":true,\"data\":_vm.postCommentsList,\"columns\":_vm.postCommentsListColumns,\"loading\":_vm.postCommentsListTableLoading}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"20px\",\"overflow\":\"hidden\"}},[_c('Page',{attrs:{\"page-size\":_vm.pageSize,\"total\":_vm.totalCount,\"current\":_vm.currentPage,\"show-elevator\":\"\",\"show-total\":\"\"},on:{\"on-change\":_vm.changePage}})],1),_vm._v(\" \"),_c('Modal',{attrs:{\"width\":1000,\"title\":\"文章评论\"},on:{\"on-visible-change\":_vm.onVisibleChange},model:{value:(_vm.commentModal),callback:function ($$v) {_vm.commentModal=$$v},expression:\"commentModal\"}},[_c('Table',{attrs:{\"stripe\":\"\",\"border\":\"\",\"columns\":_vm.commentColumns,\"data\":_vm.commentList,\"loading\":_vm.commentListTableLoading}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"20px\",\"overflow\":\"hidden\"}},[_c('Page',{attrs:{\"page-size\":_vm.commentPageSize,\"total\":_vm.commentTotalCount,\"current\":_vm.commentCurrentPage,\"show-elevator\":\"\",\"show-total\":\"\"},on:{\"on-change\":_vm.commentChangePage}})],1)],1),_vm._v(\" \"),_c('Modal',{attrs:{\"width\":1000,\"title\":\"评论回复\"},model:{value:(_vm.commentReplyModal),callback:function ($$v) {_vm.commentReplyModal=$$v},expression:\"commentReplyModal\"}},[_c('Table',{attrs:{\"stripe\":\"\",\"border\":\"\",\"columns\":_vm.commentReplyColumns,\"data\":_vm.commentReplyList}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-3727a658\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/rank/PostCommentsList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3727a658\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./PostCommentsList.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./PostCommentsList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./PostCommentsList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3727a658\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./PostCommentsList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3727a658\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/rank/PostCommentsList.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}